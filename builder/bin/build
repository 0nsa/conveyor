#!/bin/sh

# Fail fast.
set -e

status() {
  echo "\033[0;32m$@\033[0m"
}

error() {
  >&2 echo $@
}

if [ -z "$REPOSITORY" ]; then
  error "REPOSITORY env var is required"
fi

if [ -z "$BRANCH" ]; then
  error "BRANCH env var is required"
fi

if [ -z "$SHA" ]; then
  error "SHA env var is required"
fi

# Captain namespace. https://github.com/harbur/captain/blob/32fb0d765cae2c15fb2fa15b5b989fb527704715/captain/cmd.go#L115-L117
export USER=`echo "${REPOSITORY}" | cut -f 1 -d '/'`

setup() {
  # Copy ssh keys from the data volume.
  cp -r /var/run/conveyor/.ssh /root/.ssh
  chown -R root:root ~/.ssh
  chmod -R 0600 ~/.ssh
  ssh-keyscan -t rsa github.com > ~/.ssh/known_hosts

  # Copy .dockercfg from the data volume.
  cp -r /var/run/conveyor/.dockercfg /root/.dockercfg

  # Start docker daemon.
  service docker start

  sleep 5
}

clone() {
  status "Cloning..."
  # Clone the given branch and checkout the sha.
  git clone --depth 50 --branch="$BRANCH" "git@github.com:${REPOSITORY}.git" "$REPOSITORY"
  cd "$REPOSITORY"
  git checkout -qf "$SHA"
}

pull() {
  status "Pulling..."
  # Attempt to pull the last build image for this branch.
  docker pull "$REPOSITORY:$BRANCH" || docker pull "$REPOSITORY:master" || docker pull "$REPOSITORY:latest" || true
}

build() {
  status "Building..."
  docker build -t "$REPOSITORY" .
  docker tag "$REPOSITORY" "$REPOSITORY:$SHA"
  docker tag -f "$REPOSITORY" "$REPOSITORY:$BRANCH" # Force tag because we pulled the last build for this branch.
}

push() {
  status "Pushing..."
  docker push "$REPOSITORY:latest"
  docker push "$REPOSITORY:$SHA"
  docker push "$REPOSITORY:$BRANCH"
}

run() {
  setup
  docker version
  clone && pull && build && push
}

run
